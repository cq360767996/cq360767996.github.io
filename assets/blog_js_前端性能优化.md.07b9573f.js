import{o as l,c as i,d as e}from"./app.bb310e7e.js";const a='{"title":"前端性能优化","description":"","frontmatter":{"title":"前端性能优化","date":"2020-09-09T00:00:00.000Z","sidebar":"auto","categories":["js"],"tags":["js"]},"headers":[{"level":2,"title":"减少 http 请求次数和资源体积","slug":"减少-http-请求次数和资源体积"},{"level":2,"title":"使用缓存","slug":"使用缓存"},{"level":2,"title":"按需加载","slug":"按需加载"},{"level":2,"title":"代码层面优化","slug":"代码层面优化"},{"level":2,"title":"参考文档","slug":"参考文档"}],"relativePath":"blog/js/前端性能优化.md","lastUpdated":1623257057618}',r={},t=e('<p>前端性能优化的基本思路是</p><ul><li>减少 http 请求次数和资源的体积</li><li>使用缓存</li><li>按需加载</li><li>代码层面优化</li></ul><h2 id="减少-http-请求次数和资源体积"><a class="header-anchor" href="#减少-http-请求次数和资源体积" aria-hidden="true">#</a> 减少 http 请求次数和资源体积</h2><ul><li>对资源进行 css/js/html 压缩，对 js 进行 uglify</li><li>雪碧图</li><li>小图片转 base64</li><li>开启 keep-alive</li><li>开启 gzip</li><li>删除无用代码、做到最小颗粒化</li><li>尽量避免重定向</li><li>减少 DNS 查询时间，缓存 DNS</li><li>DNS 预加载</li><li>限制单个文件的大小</li></ul><h2 id="使用缓存"><a class="header-anchor" href="#使用缓存" aria-hidden="true">#</a> 使用缓存</h2><ul><li>强缓存，开启 Expires 或者 Cache-Control 来缓存资源</li><li>协商缓存，开启 LastModified、ETag 来校验新鲜程度，返回 304</li><li>缓存位置包括 server worker、Memory cache、Disk cache 和 push cache <ul><li>server worker: 独立主线程之外的 web worker，完成离线缓存、消息推送</li><li>Memory cache: 存储在内存之中，读写效率高，但是存活时间短</li><li>Disk cache: 存储在硬盘中，容量大，存活时间长</li><li>push cache: 存在于当前 session，时长大约只有 5 分钟左右</li></ul></li></ul><h2 id="按需加载"><a class="header-anchor" href="#按需加载" aria-hidden="true">#</a> 按需加载</h2><ul><li>路由懒加载、动态组件() =&gt; import()</li><li>图片懒加载</li><li>script 的 async/defer 标签来异步加载一些非核心代码</li></ul><h2 id="代码层面优化"><a class="header-anchor" href="#代码层面优化" aria-hidden="true">#</a> 代码层面优化</h2><ul><li>定时器、轮询在销毁组件的时候要进行清除</li><li>重绘、重排，尽量使用重绘，减少重排</li><li>动画多用 css3 的 animation 和 transition</li><li>简单的动画，不要使用定时器或者轮询来实现，使用 raf</li><li>尽量少的使用闭包</li><li>尽量使用少使用 export default，方便 tree shaking</li><li>防抖/节流一些操作</li><li>多使用计算属性而不是函数，计算属性会缓存到变量，没有变化时，不会重复执行</li><li>缓存接口数据，缓存 css 和 js 到 localStorage</li></ul><h2 id="参考文档"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2><ul><li><a href="https://www.jianshu.com/p/569715920cd8" target="_blank" rel="noopener noreferrer">前端性能优化的 14 个规则</a></li><li><a href="https://segmentfault.com/a/1190000016745587" target="_blank" rel="noopener noreferrer">页面性能优化办法有哪些？</a></li></ul>',12);r.render=function(e,a,r,s,h,o){return l(),i("div",null,[t])};export default r;export{a as __pageData};
