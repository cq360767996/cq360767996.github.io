import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.a4f2a176.js";const F=JSON.parse('{"title":"如何在一套电脑上设置多个github账号","description":"如何在一套电脑上设置多个github账号","frontmatter":{"title":"如何在一套电脑上设置多个github账号","date":"2023-07-12T00:00:00.000Z","description":"如何在一套电脑上设置多个github账号","disabled":false,"readMins":8,"tags":["Github"]},"headers":[],"relativePath":"blog/github/如何在一台电脑上设置多个github账号.md","filePath":"blog/github/如何在一台电脑上设置多个github账号.md"}'),l={name:"blog/github/如何在一台电脑上设置多个github账号.md"},p=o(`<h2 id="_1-生成秘钥" tabindex="-1">1 生成秘钥 <a class="header-anchor" href="#_1-生成秘钥" aria-label="Permalink to &quot;1 生成秘钥&quot;">​</a></h2><p>首先需要对自己的多个不同账户生成对应的秘钥，比如我有两个账户分别为<code>a</code>(公司账号)和<code>b</code>(github 账号)，这时候对两个账户分别生成对应账户</p><h3 id="_1-1-生成-a-的秘钥" tabindex="-1">1.1 生成 a 的秘钥 <a class="header-anchor" href="#_1-1-生成-a-的秘钥" aria-label="Permalink to &quot;1.1 生成 a 的秘钥&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a@163.com”</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a@163.com”</span></span></code></pre></div><p>这时候会在<code>~/.ssh/</code>文件夹下自动生成两个文件，分别是<code>id_rsa</code>和<code>id_rsa.pub</code></p><h3 id="_1-2-生成-b-账户的秘钥" tabindex="-1">1.2 生成 b 账户的秘钥 <a class="header-anchor" href="#_1-2-生成-b-账户的秘钥" aria-label="Permalink to &quot;1.2 生成 b 账户的秘钥&quot;">​</a></h3><p>注意一定要重命名，我们这边将其命名为<code>id_rsa_github</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/id_rsa_github</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;b@163.com&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/id_rsa_github</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;b@163.com&quot;</span></span></code></pre></div><p>这时候会在<code>~/.ssh/</code>文件夹下生成新的秘钥文件，分别是 <code>id_rsa_github</code>(私钥)和 <code>id_rsa_github.pub</code>(公钥).</p><h2 id="_2-将两个公钥分别添加到自己对应的-github-账户中" tabindex="-1">2 将两个公钥分别添加到自己对应的 github 账户中 <a class="header-anchor" href="#_2-将两个公钥分别添加到自己对应的-github-账户中" aria-label="Permalink to &quot;2 将两个公钥分别添加到自己对应的 github 账户中&quot;">​</a></h2><p>然后需要将两个秘钥(公钥文件)分别添加到自己对应的账户当中.</p><p>使用 vi 打开公钥文件即可.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/id_rsa.pud</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># a账户</span></span>
<span class="line"><span style="color:#B392F0;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/id_rsa_github.pud</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># b账户</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/id_rsa.pud</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># a账户</span></span>
<span class="line"><span style="color:#6F42C1;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/id_rsa_github.pud</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># b账户</span></span></code></pre></div><h2 id="_3-编辑配置文件" tabindex="-1">3 编辑配置文件 <a class="header-anchor" href="#_3-编辑配置文件" aria-label="Permalink to &quot;3 编辑配置文件&quot;">​</a></h2><p>先确认在<code>~/.ssh/</code>文件夹中是否存在<code>config</code>文件，如果不存在，首先创建一个，然后对其进行编辑。内容如下:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># a</span></span>
<span class="line"><span style="color:#B392F0;">Host</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">github_a</span></span>
<span class="line"><span style="color:#B392F0;">HostName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssh.github.com</span></span>
<span class="line"><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span></span>
<span class="line"><span style="color:#B392F0;">IdentityFile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/id_rsa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Host</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">github_b</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 前缀名可以任意设置</span></span>
<span class="line"><span style="color:#B392F0;">HostName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssh.github.com</span></span>
<span class="line"><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span></span>
<span class="line"><span style="color:#B392F0;">IdentityFile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/id_rsa_github</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># a</span></span>
<span class="line"><span style="color:#6F42C1;">Host</span><span style="color:#24292E;"> </span><span style="color:#032F62;">github_a</span></span>
<span class="line"><span style="color:#6F42C1;">HostName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssh.github.com</span></span>
<span class="line"><span style="color:#6F42C1;">User</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span></span>
<span class="line"><span style="color:#6F42C1;">IdentityFile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/id_rsa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Host</span><span style="color:#24292E;"> </span><span style="color:#032F62;">github_b</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 前缀名可以任意设置</span></span>
<span class="line"><span style="color:#6F42C1;">HostName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssh.github.com</span></span>
<span class="line"><span style="color:#6F42C1;">User</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span></span>
<span class="line"><span style="color:#6F42C1;">IdentityFile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/id_rsa_github</span></span></code></pre></div><p>需要更改的地方是<code>Host</code>和<code>IdentityFile</code>，修改为自己能够识别的内容，以及自己生成的秘钥即可。</p><p>注意，<code>HostName</code>一定要是<code>ssh.github.com</code>，不然可能会失败。</p><p>修改完之后，保存退出，然后在<code>terminal</code>下命令以下命令，看是否正常：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-T</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@github_a</span></span>
<span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-T</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@github_b</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-T</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@github_a</span></span>
<span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-T</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@github_b</span></span></code></pre></div><p>如果出现下面结果，说明已经正常工作:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Hi a! You&#39;ve successfully authenticated， but GitHub does not provide shell access.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Hi a! You&#39;ve successfully authenticated， but GitHub does not provide shell access.</span></span></code></pre></div><h2 id="_4-配置仓库设置" tabindex="-1">4 配置仓库设置 <a class="header-anchor" href="#_4-配置仓库设置" aria-label="Permalink to &quot;4 配置仓库设置&quot;">​</a></h2><p>首先需要删除<code>git</code>配置的全局用户名和邮箱.接着在自己每个项目的仓库中按照需要设置不同的<code>user.name</code>和<code>user.email</code></p><h3 id="_4-1-删除全局配置" tabindex="-1">4.1 删除全局配置 <a class="header-anchor" href="#_4-1-删除全局配置" aria-label="Permalink to &quot;4.1 删除全局配置&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--unset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user.name&#39;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--unset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;user.email&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--unset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user.name&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--unset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;user.email&#39;</span></span></code></pre></div><h3 id="_4-2-设置-local-配置" tabindex="-1">4.2 设置 local 配置 <a class="header-anchor" href="#_4-2-设置-local-配置" aria-label="Permalink to &quot;4.2 设置 local 配置&quot;">​</a></h3><p>在自己的每个文件夹(repo 仓库)下，打开<code>terminal</code>，然后进行设置.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">xxx</span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.email</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">xxx@xxx.com</span><span style="color:#9ECBFF;">\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">xxx</span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.email</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">xxx@xxx.com</span><span style="color:#032F62;">\`</span></span></code></pre></div><p>注意，在设置结束之后，创建 git repo(git init)的时候，一定要再次检查一下用户名和用户邮箱，如果不对， 需要再次设置.</p><h2 id="_5-将本地仓库推送到远程仓库-github" tabindex="-1">5 将本地仓库推送到远程仓库(github) <a class="header-anchor" href="#_5-将本地仓库推送到远程仓库-github" aria-label="Permalink to &quot;5 将本地仓库推送到远程仓库(github)&quot;">​</a></h2><p>之后再添加远程仓库的时候，就不能直接使用 http 的方式了，只能使用 ssh 方式.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@github_a:a/example.git</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># a account</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@github_b:b/example.git</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># b account</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@github_a:a/example.git</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># a account</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@github_b:b/example.git</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># b account</span></span></code></pre></div><p>其中<code>github_a</code>或者<code>github_b</code>就是在配置文件中设置的<code>Host</code></p><p>然后使用<code>git remote -v</code>确认是否连接上</p><p>最后进行推送</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span></code></pre></div><p>其实，上面的配置文件的意思就是，按照你设置远程仓库时使用不同的<code>Host</code>名称，查找<code>~/.ssh/config</code>文件使用不同的<code>SSH</code>文件连接到<code>GitHub</code>。这样你就将是以不同的身份访问<code>GitHub</code>仓库。</p>`,38),e=[p];function t(c,r,i,y,d,E){return a(),n("div",null,e)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
